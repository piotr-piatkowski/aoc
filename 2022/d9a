#!/usr/bin/python3

import sys
import os
import re
import argparse
from collections import defaultdict
from copy import deepcopy

debug = False

def dbg(*s):
    if debug:
        print(*s)

DIRS = {
    "R": (1, 0),
    "U": (0, 1),
    "L": (-1, 0),
    "D": (0, -1)
}

def fix_pos(head, tail, p, lim):
    if head[p] - tail[p] > lim:
        tail[p] += 1
        return True
    elif head[p] - tail[p] < -lim:
        tail[p] -= 1
        return True
    return False

def run(args):

    rope = [[0,0] for i in range(10)]

    tail2_pos = set([tuple(rope[1])])
    tail10_pos = set([tuple(rope[-1])])

    f = open(args.path, "r")
    for line in f:
        dir, cnt = line.strip().split()
        cnt = int(cnt)
        dbg(dir, cnt)
        d = DIRS[dir]
        for i in range(cnt):
            rope[0][0] += d[0]
            rope[0][1] += d[1]
            for k in range(len(rope)-1):
                tail=rope[k+1]
                head=rope[k]
                if fix_pos(head, tail, 0, 1):
                    fix_pos(head, tail, 1, 0)
                elif fix_pos(head, tail, 1, 1):
                    fix_pos(head, tail, 0, 0)
            tail2_pos.add(tuple(rope[1]))
            tail10_pos.add(tuple(rope[-1]))
            dbg(rope)

    print(len(tail2_pos))
    print(len(tail10_pos))

def main():
    script_name = os.path.basename(__file__)

    if m := re.match(r'(d\d+)a', script_name):
        script_name = m.group(1)

    parser = argparse.ArgumentParser()
    parser.add_argument('-d', '--debug', action='store_true',
            help='Enable debug')
    parser.add_argument('path', nargs='?', default=f'input-{script_name}.txt',
            help='Path to the input file')

    args = parser.parse_args()
    global debug
    debug = args.debug
    run(args)

main()
