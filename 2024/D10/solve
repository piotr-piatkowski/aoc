#!/usr/bin/python3

from aoc.tools import *
from itertools import chain

def display(w, m):
    W = max(x for x, y in m) + 1
    H = max(y for x, y in m) + 1
    for y in range(H):
        for x in range(W):
            if (x,y) in w:
                print(f"{m[x,y]}/{len(set(w[x,y])):02d}", end=' ')
            else:
                print('   .', end=' ')
        print()

def run(args):

    M = dict()
    for y, line in enumerate(read_lines(args)):
        for x, c in enumerate(line):
            M[complex(x,y)] = int(c) if c.isdigit() else -1

    W = defaultdict(list)

    for d in reversed(range(0, 10)):
        for p, v in M.items():
            if v == d:
                if d == 9:
                    W[p] = [p]
                else:
                    W[p] = list(chain.from_iterable(
                        W[p+dir] for dir in C_HV_DIRS
                        if M.get(p+dir, -1) == d+1
                    ))

    p1 = 0
    p2 = 0
    for p, v in W.items():
        if M[p] == 0:
            p1 += len(v)
            p2 += len(set(v))

    print(p1)
    print(p2)

main(run)
