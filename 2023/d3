#!/usr/bin/python3

import sys
import os
import re
import argparse
from collections import defaultdict
from copy import deepcopy

debug = False

def dbg(s):
    if debug:
        print(s)

def run(args):

    f = open(args.path, "r")
    lines = f.read().splitlines()

    num_re = re.compile(r'\d+')

    map = defaultdict(lambda: '.')
    for y, l in enumerate(lines):
        for x, ch in enumerate(l):
            if ch != '.' and not ch.isdigit():
                map[x,y] = ch

    sum1 = 0
    for y, l in enumerate(lines):
        for m in num_re.finditer(l):
            n = int(m.group(0))
            x = m.start()
            xlen = len(m.group(0))
            dbg(f'{n} @ {x},{y} len {xlen}')
            ok = False
            for x1 in range(x-1, x + xlen + 1):
                for y1 in range(y-1, y + 2):
                    if map[x1,y1] != '.':
                        ok = True
                        break
            if ok:
                sum1 += n
    print(sum1)

    sum2 = 0
    for (x,y), ch in map.items():
        if ch == '*':
            nums = []

            for y1 in [y-1, y, y+1]:
                if y1 < 0 or y1 >= len(lines):
                    continue
                for m in num_re.finditer(lines[y1]):
                    n = int(m.group(0))
                    x1 = m.start()
                    xlen = len(m.group(0))
                    if x >= x1 - 1 and x <= x1 + xlen:
                        nums.append(n)
            dbg(f'* @ {x},{y}: nums {nums}')

            if len(nums) == 2:
                sum2 += nums[0] * nums[1]
    print(sum2)

def main():
    script_name = os.path.basename(__file__)

    parser = argparse.ArgumentParser()
    parser.add_argument('-d', '--debug', action='store_true',
            help='Enable debug')
    parser.add_argument('path', nargs='?', default=f'input-{script_name}.txt',
            help='Path to the input file')

    args = parser.parse_args()
    global debug
    debug = args.debug
    run(args)

main()
