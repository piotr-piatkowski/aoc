#!/usr/bin/python3.8

import sys
import os
import re
import argparse
from collections import defaultdict
from copy import deepcopy

debug = False

def dbg(s):
    if debug:
        print(s)

def filter(nums, most):

    dbg(f"Getting {nums} for {most=}")

    bpos = 0
    while(len(nums) > 1):
        c = [0, 0]
        for n in nums:
            b = int(n[bpos])
            c[b] += 1
        if most:
            if c[0] > c[1]:
                b = '0'
            else:
                b = '1'
        else:
            if c[1] < c[0]:
                b = '1'
            else:
                b = '0'
        nums = [n for n in nums if n[bpos] == b]
        dbg(f"After {bpos=} {nums=}")
        bpos += 1
    return int(nums[0], 2)

def run(args):

    nums = []
    f = open(args.path, "r")
    for line in f:
        line = line.rstrip()
        nums.append(line)

    bits = defaultdict(lambda: [0,0])

    for n in nums:
        for i, b in enumerate(n):
            bits[i][int(b)] += 1

    eps = 0
    gam = 0

    for i in range(len(nums[0])):
        gam *= 2
        eps *= 2
        if bits[i][1] > bits[i][0]:
            gam += 1
        else:
            eps += 1

    print(gam * eps)

    oxy = filter(nums, True)
    co2 = filter(nums, False)
    print(oxy*co2)


def main():
    script_name = os.path.basename(__file__)

    parser = argparse.ArgumentParser()
    parser.add_argument('-d', '--debug', action='store_true',
            help='Enable debug')
    parser.add_argument('path', nargs='?', default=f'input-{script_name}.txt',
            help='Path to the input file')

    args = parser.parse_args()
    global debug
    debug = args.debug
    run(args)

main()
